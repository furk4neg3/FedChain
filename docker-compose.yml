version: "3"

services:
  ganache:
    image: trufflesuite/ganache-cli
    ports:
      - "8545:8545"
    networks:
      - fl_network

  server:
    build: .
    entrypoint: ["sh", "/app/server/entrypoint.sh"]
    ports:
      - "8080:8080"
    environment:
      - NUM_CLIENTS=3
    depends_on:
      - ganache
    networks:
      - fl_network

  client1:
    build: .
    depends_on:
      - server
    environment:
      - SERVER_IP=server
      - SERVER_PORT=8080
      - CLIENT_ID=0
      - NUM_CLIENTS=3
    command:
      - sh
      - -c
      - |
        python - << 'EOF'
        import socket, time, os
        host = os.environ['SERVER_IP']
        port = int(os.environ['SERVER_PORT'])
        while True:
            try:
                sock = socket.socket()
                sock.connect((host, port))
                sock.close()
                break
            except:
                print(f"⏳ waiting for FL server at {host}:{port}…")
                time.sleep(1)
        EOF
        python client/client.py
    networks:
      - fl_network

  client2:
    build: .
    depends_on:
      - server
    environment:
      - SERVER_IP=server
      - SERVER_PORT=8080
      - CLIENT_ID=1
      - NUM_CLIENTS=3
    command:
      - sh
      - -c
      - |
        python - << 'EOF'
        import socket, time, os
        host = os.environ['SERVER_IP']
        port = int(os.environ['SERVER_PORT'])
        while True:
            try:
                sock = socket.socket()
                sock.connect((host, port))
                sock.close()
                break
            except:
                print(f"⏳ waiting for FL server at {host}:{port}…")
                time.sleep(1)
        EOF
        python client/client.py
    networks:
      - fl_network

  client3:
    build: .
    depends_on:
      - server
    environment:
      - SERVER_IP=server
      - SERVER_PORT=8080
      - CLIENT_ID=2
      - NUM_CLIENTS=3
    command:
      - sh
      - -c
      - |
        python - << 'EOF'
        import socket, time, os
        host = os.environ['SERVER_IP']
        port = int(os.environ['SERVER_PORT'])
        while True:
            try:
                sock = socket.socket()
                sock.connect((host, port))
                sock.close()
                break
            except:
                print(f"⏳ waiting for FL server at {host}:{port}…")
                time.sleep(1)
        EOF
        python client/client.py
    networks:
      - fl_network

networks:
  fl_network:
    driver: bridge
